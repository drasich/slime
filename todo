LATELY
- modules loading/unloading, reupdate functions, and objects components:
  It means re-reading the scene, etc... it means reloading includes:
  - write the scene to a file
  - delete the scene
  - unload/reload library
  - read the scene.
  - question is : will it be fast enough?
- load/unload components pb in object to get ref of name and func
- in component_view.c, _entry_activated_cb:
  if the property is a pointer : check if there is an object
  with the entry string and then set the property with this pointer

IDEAS
- in the component managers, for all the components add objects
  to component, then call init update on the component that calls it for
  all objects that has this component... (but we cannot choose the order 
  of the components)

CLEAN
- fix functions name -> put the verb at the end

ISSUES (must be done)
- save the component functions in the component manager
- change properties in ComponentDesc so there is only one to be created and I
  can remove the one in create_component and object_post_read
- in control.c, _op_change_property save the data if it's not a pointer to existing data (like an int)
- Fix property component update - remove object from parameter?
- open play window and close the main window with the cross -> crash : because 
  control is clean in view_destroy and then there is a pointer to control in gameview that is
  used in the cleaning for gameview, I removed the free(v->control) temporarily but there shouldn't
  be control in gameview... component manager I have to check
- uniforms/attributes... 2 choices : put attributes and uniforms in mesh component
  OR call init attribute that calls getattribute to get the good attr

BUG
- focus the play and main windows alternatively(with the mouse)
  and close with escape sometimes window manager freeze.


RENDER
- make scale
- decide how to draw with camera ortho and per
- mesh component
  - solve the quad stuff : 
   make a mesh method : drawelements or drawarrays, etc
  - create, choose file, etc...
- material

VIEW
- make draggers translate, rotation, scale
- save view : save camera position and scene... window size?
- make the camera display better
- remove the animator for view?

ARCHITECTURE
- make material to handle textures, uniform etc
- init mode et real mode
- decider si transform devient un component a part en dehors d'object
et aussi "object properties" "name, ..."
- make one component, one library? instead of one big library for all?
- add lua-jit


PROPERTIES
- make a hash of property_set, create_component(component manager, desc)
  get propertyset or create if doesn't exit yet

- make vec4 a possible type to edit easily
- material
- comment faire pour editer facilement un enum...
- pointeur sur un object ou autre type
  - use pointer in the applicatio but...
  - ...make an id system for saving object
  - display the name of the object
  - comment set l'object sur la propriete?
    - il faut pouvoir drag a partir du tree, ou bien peut etre de la view.
    - selectionner dans une liste?
    - ecrire le nom de l'object (le plus simple)
- make a hide property for component, to avoid display in properties
- scene properties: set the camera (among other things)
- remove component properties callback?
  but maybe needed when we edit multiple objects
- handle properties when multiple objects selected?
  => make a structure in context with position and rotation
  be able to create an empty and change mesh in the properties


CODE
- release les components widgets correctement
- check everything for cleaning


GAMEVIEW
- check the gl callbacks init, update, draw.... for gameview;


