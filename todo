LATELY
- put rand seed in engine_init something
- project save
- revoir comment rajouter un component
- quand on reload les scenes, ne pas tout effacer la liste. juste updater
  les pointeurs sur les scenes.
- quand on instance un object dans un component, le rajouter dans le tree...
- camera display? -> change to transparent mesh, so we can select it?
- make a struct with entry/spinner data, in callbacks like entry_activate, entry_changed
  use this info to do something appropriate
- right click for scene tree and objects,
  with ecore read if there was a file added, removed, etc...
- component_view: replace componentproperties by dataproperties
- uniforms send to fix: there should be only one method but now 2 different send, : 
  - in _mesh_component_draw: send the data in shader instance
  - in shader_mesh_draw: for each 'registered' uniform of the shader, 
    if it exists in the shader instance, find it and send it.
- check again scene_post_read idea
- handle all uniform types in shader instance, component view and draw shader
- rotate dragger : display a better disk
- patch elementary genlist tree for :
  - drag something just click and move, no long press
  - can move something to children (might be quite difficult)
- display info on rotation, scale, translation
- add an entry to tree to search for object name
- use hoversel
- fix the warnings (color) and the output
- be able to set the relationship parent/children in the editor (just in code for now)

SAVE
- last scene selected.
- for each scene
  - save editcamera pos... now the camera is same for everyone... is it better?
  - objects selected

USER FRIENDLY
- only able to select camera if there is a camera component

CLEAN
- TODO in the code.
- fix functions name -> put the verb at the end
- clean the scene when?
- clean undo list and operation data
- factorize uniforms properties in component view

ISSUES (must be done)
- check the component functions in the component manager
- change properties in ComponentDesc so there is only one to be created and I
  can remove the one in create_component and object_post_read
- use id instead of comparing string strcmp(component->name,"mesh") ?
- how to remove the many shader instances that are not used in shader instance hash.
- unselect object in tree : can press control to unselect but soso.
- replace longpress by right click in genlist

NOT URGENT
- scene resource : change hash to list, or add callback to property
  when it is changed...
  will have to do that eventually because, if I rename a scene, what do
  I do with the file... I have to rename it right...
  so add void* callback in the property struct?
- check name of scenes? only one name for each?
- 4 view

BUG
- focus the play and main windows alternatively(with the mouse)
  and close with escape sometimes window manager freeze. (maybe when
  there is composite in the window manager)
- also maybe only happens when enlightenment is running with composite:
  open play window and close the main window with the cross -> crash : because 
  control is clean in view_destroy and then there is a pointer to control in gameview that is
  used in the cleaning for gameview, I removed the free(v->control) temporarily but there shouldn't
  be control in gameview... component manager I have to check


RENDER
- decide how to draw with camera ortho and per
  - choose ortho or pers in mesh component?, but what if I want I special
    width and height
  - make a default camera, but make it possible to choose another camera, in
    mesh component.
  - objects inherit the camera from the parent or the root.
  - there is a tree of objects, and also groups of objects, one group for
    every camera
  - make something like draw(Component* c, Render_info* info) where info has the matrix
    the uniform to sets etc...?
- mesh component 
   - be able to choose between drawelements or drawarrays, etc ?
   -> separate component data and component functions, to reuse the same data
   with different functions
- material

VIEW
- save view : save camera position and scene... window size?
- make the camera display better
- remove the animator for view?

ARCHITECTURE
- with ecore, read directories and detect changes: files added, removed, etc...
- handle fbo/texture/texture_handle better;
- texture manager
- make the mesh/resource manager. just input the name and it loads in
  the background
- separate shader instance from mesh component?
- decider si transform devient un component a part en dehors d'object
et aussi "object properties" "name, ..."
- make one component, one library? instead of one big library for all?
- add lua-jit
- choose component init order
- component dependency

DESIGN
- display scene properties on the right when nothing is selected
  or tips?...

PROPERTIES
- camera choose ortho or pers, make an enum property
  - comment faire pour editer facilement un enum...
- make vec4 a possible type to edit easily
- pointeur sur un object ou autre type
  - use pointer in the applicatio but...
  - ...make an id system for saving object
  - display the name of the object
  - comment set l'object sur la propriete?
    - il faut pouvoir drag a partir du tree, ou bien peut etre de la view.
    - selectionner dans une liste?
    - ecrire le nom de l'object (le plus simple)
- make a hide property for component, to avoid display in properties,
  or just make it unremovable with no properties
- scene properties: set the camera (among other things)
- remove component properties callback?
  but maybe needed when we edit multiple objects
- handle properties when multiple objects selected?
  => make a structure in context with position and rotation
  be able to create an empty and change mesh in the properties


CODE
- release les components widgets correctement
- check everything for cleaning
  - component widget
  - ...

GAMEVIEW
- check the gl callbacks init, update, draw.... for gameview;

IDEAS
- sauver les scenes tte les 1 minutes
- many times in unity I want to write a new component with new functions but
  with the same data/properties, but If I write a new component, I lose the
  data I set before. it sounds stupid to say that but yes must separate
  data and logic... 
  something like 
  - ComponentData : the struct and the properties definition.
  - ComponentBehavior : the functions that act on the data.

- tried to use panel instead of panes.... but panel are not resizable...
- in the component managers, for all the components add objects
  to component, then call functions like init, update on the component that calls it for
  all objects that has this component... (but we cannot choose the order 
  of the components)
- change data in the entry -> show changes without pressing enter?

